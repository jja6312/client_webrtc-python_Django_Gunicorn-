name: Django CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: django-app
      PYTHON_VERSION: "3.10"

    steps:
    # 1. 소스 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. 파이썬 설정
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    # 3. OS‑레벨 패키지
    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev default-libmysqlclient-dev \
          build-essential pkg-config libffi-dev libssl-dev

    # 4. 파이썬 의존성
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django mysqlclient python-dotenv gunicorn

    # 5. 테스트
    - name: Run Tests
      run: |
        cd web_app
        python manage.py test

    # 6. 정적 파일 수집
    - name: Collect Static Files
      run: |
        cd web_app
        python manage.py collectstatic --noinput

    # 7. 패키징
    - name: Package app
      run: |
        tar -czvf django-app.tar.gz web_app/

    # 8. GitHub 아티팩트(업로드‑artifact v4 사용)
    - name: Upload artifact to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: django-app
        path: django-app.tar.gz

    # 9. OCI Artifact Registry 업로드 (2025 권장 방식)
    - name: Upload to OCI Artifact Registry
      env:
        OCI_TENANCY_OCID:   ${{ secrets.OCI_TENANCY_OCID }}
        OCI_USER_OCID:      ${{ secrets.OCI_USER_OCID }}
        OCI_FINGERPRINT:    ${{ secrets.OCI_FINGERPRINT }}
        OCI_REGION:         ${{ secrets.OCI_REGION }}
        OCI_PRIVATE_KEY:    ${{ secrets.OCI_PRIVATE_KEY }}
        OCI_ARTIFACTS_REPOSITORY_ID: ${{ secrets.OCI_ARTIFACTS_REPOSITORY_ID }}
      run: |
        echo "$OCI_PRIVATE_KEY" > oci_api_key.pem
        chmod 600 oci_api_key.pem

        mkdir -p ~/.oci
        printf "[DEFAULT]\nuser=%s\nfingerprint=%s\nkey_file=oci_api_key.pem\ntenancy=%s\nregion=%s\n" \
          "$OCI_USER_OCID" "$OCI_FINGERPRINT" "$OCI_TENANCY_OCID" "$OCI_REGION" > ~/.oci/config

        curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh \
          | bash -s -- --accept-all-defaults
        export PATH="$HOME/bin:$PATH"

        oci artifacts generic artifact upload-by-path \
          --repository-id "$OCI_ARTIFACTS_REPOSITORY_ID" \
          --artifact-path django-app.tar.gz \
          --artifact-display-name django-app.tar.gz \
          --content-type application/gzip

